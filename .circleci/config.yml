---
version: 2.1
jobs:
  install-requirements-node:
    docker:
      - image: node:16-alpine3.14
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package-lock.json" }}
      - run:
            name: Installation des dépendences npm
            command: |
                npm install
      - save_cache:
          key: dependencies-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"

  build-dist:
    docker:
        - image: node:16-alpine3.14
    steps:
        - checkout
        - attach_workspace:
            at: ./
        - restore_cache:
            keys:
              - dependencies-{{ checksum "package-lock.json" }}
        - run:
            name: Génération du build
            command: |
              npm run build
        - run:
            name: Réécriture des urls des fichiers dans l'index pour les github pages
            command: |
              sed -e 's|/css/index|css/index|g' -e 's|/js/index|js/index|g' -i dist/index.html
              sed -e 's|/css/index|css/index|g' -e 's|/js/index|js/index|g' -i dist/index-impact.html
              sed -e 's|/css/index|css/index|g' -e 's|/js/index|js/index|g' -i dist/index-afa.html
              sed -e 's|/css/index|css/index|g' -e 's|/js/index|js/index|g' -i dist/index-afa-2021.html
              apk add --no-cache zip && zip -r dist.zip dist
        - persist_to_workspace:
            root: ./
            paths: dist
        - store_artifacts: # Accès au résultat pour validation si nécessaire
            path: ./dist.zip
            destination: dist.zip

  install-requirements-python:
    docker:
      - image: python:3.8
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "dashboard-configuration/requirements.txt"}}
      - run:
            name: Installation des requirements Python
            command: |
                python3 -m venv venv
                . venv/bin/activate
                pip3 install -r dashboard-configuration/requirements.txt
                pip
      - save_cache:
          key: dependencies-python-{{ checksum "dashboard-configuration/requirements.txt"}}
          paths:
            - "venv"

  build-dashboard-configuration:
    docker:
        - image: python:3.8
    steps:
        - checkout
        - restore_cache:
            keys:
              - dependencies-python-{{ checksum "dashboard-configuration/requirements.txt"}}
        - run:
            name: Génération du fichier de configuration par rapport au fichier csv
            command: |
              . venv/bin/activate
              python dashboard-configuration/generate_configurations.py
        - persist_to_workspace:
            root: ./
            paths:
              - public/france-relance.json
              - public/afa.json
              - public/afa-2021.json
              - public/impact.json

  deploy-github-pages:
    docker:
        - image: node:16-alpine3.14
    steps:
        - checkout
        - attach_workspace:
            at: ./
        - run:
            name: Install and configure dependencies
            command: |
              apk add --no-cache git openssh
              npm install -g --silent gh-pages@2.0.1
              git config user.email "circleci@dashboard-widget"
              git config user.name "CircleCI"
        - add_ssh_keys:
            fingerprints:
              - "db:bf:2d:63:8e:96:6f:d6:14:d0:8d:59:eb:52:54:94"
              - "e8:6e:d1:83:df:ec:f8:b5:31:e2:32:70:e2:38:b5:22"
        - run:
            name: Deploy docs to gh-pages branch
            command: gh-pages --dist ./dist --message "[ci skip]"

workflows:
    version: 2
    gh-pages:
      jobs:
        - install-requirements-node
        - install-requirements-python
        - build-dashboard-configuration:
            requires:
              - install-requirements-python
        - build-dist:
            requires:
              - install-requirements-node
              - build-dashboard-configuration
        - deploy-github-pages:
            requires:
              - build-dist
            filters:
              branches:
                only:
                  - main
